name: Unity SDK Pull Request Labeling

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  triage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml
          sync-labels: false

  size-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: "pascalgn/size-label-action@v0.4.3"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          sizes: >
            {
              "10": "XS",
              "100": "S",
              "250": "M",
              "500": "L",
              "1000": "XL",
              "2000": "XXL"
            }

  unity-specific-labels:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: Label Unity-specific changes
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: changedFiles } = await github.rest.pulls.listFiles({
              ...context.repo,
              pull_number: context.issue.number,
            });

            const filePaths = changedFiles.map(file => file.filename);

            const labelMap = {
              'Assets/': 'unity-assets',
              'ProjectSettings/': 'unity-settings',
              'Packages/': 'unity-packages',
              'Assets/Convai/Editor/': 'unity-editor',
              'Assets/Convai/Plugins/': 'unity-plugins'
            };

            const labelsToAdd = Object.entries(labelMap)
              .filter(([dir]) => filePaths.some(file => file.startsWith(dir)))
              .map(([, label]) => label);

            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                ...context.repo,
                issue_number: context.issue.number,
                labels: labelsToAdd
              });
            }